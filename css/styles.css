:root {
  --blanco: #fff;
  --oscuro: #212121;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
  --grisClaro: #dfe9f3;

  /* custom properties son propiedades que se pueden definir desde el principio */
}

/* ETIQUETAS box-sizing y befor, afters nos ayudan a evitar que las cajas o boxes en HTML no se redimencionen al momento de agregar padings y margins  */

/* Globales **/
html {
  font-size: 62.5%;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/* Selector de elemento */
body {
  font-size: 16px;
  font-family: "Krub", sans-serif;

  /* background-image permite usar un degradado de colores.*/
  background-image: linear-gradient(
    to top,
    var(--grisClaro) 0%,
    var(--blanco) 100%
  );
}

@media (min-width: 768px) {
  .boton a {
    width: auto;
  }
}

.sombra {
  -webkit-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  -moz-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  background-color: var(--blanco);
  padding: 2rem;
}

/*Tipografia **/
h1 {
  font-size: 3.8rem;
}

h2 {
  font-size: 2.8rem;
}

h3 {
  font-size: 1.8rem;
}

h1,
h2,
h3 {
  text-align: center;
  font-weight: 400;
}

/*titulos **/
.titulo span {
  font-size: 2rem;
}

/*Navegacion Principal */
.nav-bg {
  background-color: var(--secundario);
}

.navegacion-principal {
  display: flex; /*Aqui se usara flexbox */
  flex-direction: column; /*Ordena Horizontal o verticalmente por default esta en row(horizontalmente)*/
  /* Se usa en lugar de aling-items cuando flex-direction es column */
}

@media (min-width: 768px) {
  .navegacion-principal {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
}

.navegacion-principal a {
  display: block;
  text-align: center;
  color: var(--blanco);
  text-decoration: none;
  font-size: 2rem;
  font-weight: 700;
  padding: 1.25rem;
}

.navegacion-principal a:hover {
  background-color: var(--primario);
  color: var(--oscuro);
}

/*Hero */
.hero {
  background-image: url(../img/hero.jpg);
  background-repeat: no-repeat;
  background-size: cover; /*La imagenToma todo el ancho de la pantalla*/
  height: 450px;
  position: relative; /*Para que pueda contener contenedores relativos*/
  margin-bottom: 2rem;
}

.contenido-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.8);
  width: 100%;
  height: 100%;
  color: var(--blanco);

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.contenedor {
  max-width: 120rem;
  margin: 0 auto;
}

.boton {
  color: var(--blanco);
  text-decoration: none;
  background-color: var(--secundario);
  padding: 1rem 3rem;
  font-size: 2rem;
  text-transform: uppercase;
  font-weight: 700;
  border-radius: 0.5rem;
  text-align: center;
  width: auto;
}

.contenido-hero .ubicacion {
  display: flex;
  align-items: flex-end;
}

@media (min-width: 768px) {
  .servicios {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 1rem;

    /* grid: 200px 800px / 300px 300px; */
    /* GRID En este caso primero se defienen los "ROWS" y despues las "COLUMNS", es la forma abreviada de definirlas */

    /*   Otra forma de definir columnas en grid, lo que significa 3 columnas 
         grid-template-columns: repeat(3, 1fr);                                */
  }
}

/* Combinación de decendentes
Selecciona a los elementos hijos cuyos 
padres sean hijos de una clase */

/* Recuerda si un elemento tiene un selector mas especifico no importa
mucho donde haya sido declarado, CSS decidirá por su especificidad */

/* CSSMATIC te entrega sombreados, degradados y texturas entre otras cosas para tus proyectos */

/* CANIUSE Sirve para saber si algun elemento o propiedad de css no es compatible. */
